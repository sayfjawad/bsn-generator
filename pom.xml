<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>nl.multicode.elevenproof</groupId>
  <artifactId>elevenproof-api</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
    <module>application</module>
    <module>core</module>
    <module>package</module>
    <module>spring</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Supporting frameworks -->
    <lombok.version>1.18.24</lombok.version>
    <log4j.version>2.17.1</log4j.version>

    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <!-- Unit testing dependencies versions-->
    <mockito-core.version>5.1.1</mockito-core.version>
    <assertj-core.version>3.23.1</assertj-core.version>
    <junit-jupiter.version>5.9.1</junit-jupiter.version>
    <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>

    <!-- PiTest settings -->
    <pit.coverageThreshold>75</pit.coverageThreshold>
    <pit.mutationThreshold>75</pit.mutationThreshold>
    <pitest-junit5-plugin.version>1.1.2</pitest-junit5-plugin.version>
    <pitest-maven.version>1.11.7</pitest-maven.version>

    <!-- JaCoCo Properties -->
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.language>java</sonar.language>

    <!-- If you want to connect to a sonarqube server then configure the parameters below in your environment variables -->
    <sonar.host.url>
      ${env.SONAR_URL}
    </sonar.host.url>
    <sonar.login>${env.SONAR_LOGIN}</sonar.login>
    <sonar.password>${env.SONAR_PASSWORD}</sonar.password>
    <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>
    <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
    <logback-classic.version>1.4.6</logback-classic.version>
    <log4j-slf4j2-impl.version>2.20.0</log4j-slf4j2-impl.version>
    <log4j-slf4j-impl.version>2.12.4</log4j-slf4j-impl.version>
    <slf4j-api.version>2.0.7</slf4j-api.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-validation</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j-slf4j-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j-slf4j-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j-slf4j-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
      <dependency>
        <artifactId>junit-jupiter-engine</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <scope>test</scope>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <artifactId>junit-jupiter-params</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <scope>test</scope>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <artifactId>assertj-core</artifactId>
        <groupId>org.assertj</groupId>
        <scope>test</scope>
        <version>${assertj-core.version}</version>
      </dependency>
      <dependency>
        <artifactId>pitest-maven</artifactId>
        <groupId>org.pitest</groupId>
        <scope>test</scope>
        <version>${pitest-maven.version}</version>
      </dependency>
      <dependency>
        <artifactId>mockito-core</artifactId>
        <groupId>org.mockito</groupId>
        <scope>test</scope>
        <version>${mockito-core.version}</version>
      </dependency>
      <dependency>
        <artifactId>mockito-junit-jupiter</artifactId>
        <groupId>org.mockito</groupId>
        <scope>test</scope>
        <version>${mockito-core.version}</version>
      </dependency>
      <dependency>
        <artifactId>lombok</artifactId>
        <groupId>org.projectlombok</groupId>
        <scope>provided</scope>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>RELEASE</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>testCompile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>pitest</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>pitest-maven</artifactId>
            <configuration>
              <coverageThreshold>${pit.coverageThreshold}</coverageThreshold>
              <mutationThreshold>${pit.mutationThreshold}</mutationThreshold>
              <targetClasses>
                <param>nl.multicode.*</param>
              </targetClasses>
              <targetTests>
                <param>nl.multicode.*</param>
              </targetTests>
              <excludedClasses>
                <excludedClass>nl.multicode.configuration.*</excludedClass>
              </excludedClasses>
              <timeoutConstant>5000</timeoutConstant>
              <timestampedReports>false</timestampedReports>
            </configuration>
            <dependencies>
              <dependency>
                <artifactId>pitest-junit5-plugin</artifactId>
                <groupId>org.pitest</groupId>
                <version>${pitest-junit5-plugin.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <id>pit-report</id>
                <phase>test</phase>
              </execution>
            </executions>
            <groupId>org.pitest</groupId>
            <version>${pitest-maven.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>maven_central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>http://repo1.maven.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>
</project>